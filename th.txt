JAVA SCRIPT:
progamming language: c,cpp,java
scripting language: python,js,shell
scripting language is subset of programming language
--------------------------------------------------

statically typed language: c,cpp,java : int x,float y,......
dynamically typed language: python,js,shell :
we dont need to specify the data type of variable
//10 --->int
//"" --->string

--------------------------------------------------

server side:c,cpp,java,python
code run: output server | console
client side: js,
code run: output browser

:amazon : -->login press --> 
:image : --> zoom : 


-->web pages: HTML -->
-----------------------------------------------------

turbo c,
gcc compiler,

compiler:
javascript compiler : babel
browser will have js engine


java script was developed by netscape

first engine of java script was spider monkey firefox

v8 engine : google chrome
nitro engine : safari
chk engine : microsoft edge


ways to write js:
1. inline js
2. internal js
3. external js : .js file

//to declare variable in js we have 3 keywords
1) var
2) let
3) const

--------------------------------------------------
scope:
var is having global scope
let is having block scope
const is having block scope

{
    block..
}
.js it self is a block
-----------------
operators:
operators are symbols that are used to perform operations on operands

1)unary operator: it requires only one operand
2)binary operator: it requires two operands
3)ternary operator: it requires three operands

1)arithmetic operators: +,-,*,/,%,++,--,**(exponentiation)
2)assignment operators: =,+=,-=,*=,/=,%=,**=,
3)comparison operators: ==,!=,>,<,>=,<=,===,!==,
4)logical operators: &&,||,!,
5)bitwise operators: &,|,^,~,<<,>>
6)conditional operators: ?: //ternary operator



decision making statments:
if else
switch case
loops

if(condition){
    //block..
    
}else{

    //else block...
}


logical operators:
&&
||
!

cond 1  && cond 2

T       T      T
T ----> F     F
F **    -     F


cond1 || cond2

T    -     T
F ---> T   T
F ---> F   F

task:

user age = 18


type of loops:

2 types of loops:
entry controlled loop: for,while : condition is checked first
exit controlled loop: do while : condition is checked at the end

for  || while

for when we know the number of iterations : sp and ep are known
while when we dont know the number of iterations : sp and ep are not known

for(initialization;condition;increment/decrement){
    //block
}





while:
enter opening balance: 100
enter opening balance: 200
enter opening balance: 9
please try again..


min op bal required is 10000
only 3 attempts are allowed

enter opening balance: 1200
enter opening balance: 12000 ->coorect...

console.log("welcome to bank");

string:

"royal" -->collection of characters
string stores data in array:
array stores data in index form
index always starts from 0

"royal"
[r][o][y][a][l]
[0][1][2][3][4]

concept of mutable and immutable:
mutable: which can be changed / modified
immutable: which cannot be changed / modified

in javascript strings are immutable with same reference but mutable with different reference

JSON: javascript object notation

student data store:

srollno: 101
sname
sage
sfees
....
20...
20 variable...

object wrap:

student object:{

}

json normalaization:

user table   

id
name
email
password


userDetails table:
uid fk
address
phone
city
state
country

----------------------------------------
array:
array is group of elements

need | use of array:
1000 employees namme :
e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e1000

data array : index manner
array follows homogeneous collection of elements

[][][][][][][][][][][][][][][][][][]
----------------------------------------
10,12,13,14,15
[10][12][13][14][15] -->index
array index always starts from 0
[0][1][2][3][4]


array :--> functions user define functions:

user define functions:

functions: funciton is block of code with name:
use:
1)code reusablity:
    code :10 --> 20 time repete : 200 lines
    xyz{10 line} --> 20 time --> xyz,xyz

3)code optmization and maintainblity:
    bank application:
    account opening -->fun
    withdraw  -->func
    deposit..    -->func

    application : line 
    ______________________________________________________
    hello world
    ______________________________________________________
    having
    ______________________________________________________


void -->return type
int -->return type
int sum()
void main()

we dont have data type in javascript

funciton funName()
{

}

2 type of functions

pre define functions:
user define functions:


both will have 4 type
1)with return type with argument | param
1)with return type without argument | param
1)without return type with argument | param
1)without return type without argument | param


